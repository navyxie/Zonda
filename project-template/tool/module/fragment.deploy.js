// Generated by CoffeeScript 1.6.3
(function() {
  var CONFIG, Deploy, HashReplace, Mustache, colors, deploy_map, exec, frag_name, fs, hash_map, path, project_dir, rel_path;

  require("js-yaml");

  fs = require("fs");

  path = require("path");

  colors = require("colors");

  Mustache = require("mustache");

  exec = require('child_process').exec;

  console.log("\n\n Zonda Tool".bold + ":  Deploy...");

  project_dir = path.resolve('./', '../');

  CONFIG = require("" + project_dir + "/etc/zonda.yml");

  deploy_map = CONFIG.deploy_map;

  if (CONFIG.version === "md5") {
    hash_map = fs.readFileSync("" + project_dir + "/dist/.cache_hash_map.json", {
      encoding: "utf8"
    });
    hash_map = JSON.parse(hash_map);
  }

  HashReplace = function(text) {
    var file, hash, target_file;
    if (CONFIG.version !== "md5") {
      return text;
    }
    for (file in hash_map) {
      hash = hash_map[file];
      target_file = file.replace(CONFIG.version, hash);
      text = text.replace(file, target_file);
    }
    return text;
  };

  Deploy = function(rel_path, frag_name) {
    var deploy_dir, err, res_content, tpl;
    deploy_dir = path.resolve(project_dir, rel_path);
    console.log("\n   Deploying: ".bold + ("" + deploy_dir + "/") + (" " + frag_name).bold.yellow + "...");
    try {
      tpl = fs.readFileSync("" + project_dir + "/tool/deploy_fragment/" + frag_name, {
        encoding: "utf8"
      });
      res_content = Mustache.render(tpl, {
        CONFIG: CONFIG
      });
      res_content = HashReplace(res_content);
      fs.writeFileSync("" + deploy_dir + "/" + frag_name, res_content);
      return console.log("   >>".bold + " Success!".green);
    } catch (_error) {
      err = _error;
      console.log("   >>".bold + " Error!".red.inverse);
      return console.log("   >>".bold + (" " + err).red.inverse.bold);
    }
  };

  for (frag_name in deploy_map) {
    rel_path = deploy_map[frag_name];
    Deploy(rel_path, frag_name);
  }

}).call(this);
