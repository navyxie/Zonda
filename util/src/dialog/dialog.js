// Generated by CoffeeScript 1.6.2
/* Usage:
```coffeescript

  # Define a new dialog
  Util.dialog
    title: "I am the title"

    content: "some text/HTML, or Mustache.render output"

    css:
      "height": 1200

    class: "you can add class for this dialog"

    button:
      "Yes": ->
        # Generate the a button named "Yes", and do callback when you click the button

      "Other Button": ->
        # callback

  # Open it!
  do Util.dialog.open

  # Close it!
  do Util.dialog.close

  # Close dialog delay a moment
  Util.dialog.close 1200

  # Chain style
  Util.dialog.open().close(1300)

  # Return the dialog jQuery object
  console.log Util.dialog.$dom

  # Return the dialog config
  console.log Util.dialog.config

  # If you want to update the position and height of this dialog, just call:
  do Util.dialog.open

```
*/
define(function(require, exports, module) {
  var $, Mustache, dialog, prefix, tpl, _;

  $ = require("bootstrap");
  _ = require("underscore");
  Mustache = require("mustache");
  tpl = require("./tpl/dialog.tpl");
  prefix = "zonda-util";
  dialog = function(config) {
    var dialog_html;

    dialog.config = config;
    if ($("#" + prefix + "-dialog:visible")[0]) {
      return false;
    }
    dialog_html = Mustache.render(tpl, {
      title: config.title,
      content: config.content
    });
    $(document.body).append(dialog_html);
    if (config.css) {
      $("#" + prefix + "-dialog").css(config.css);
    }
    if (config["class"]) {
      $("#" + prefix + "-dialog").addClass(config["class"]);
    }
    _.each(config.button, function(button_callback, button_name) {
      var uid;

      uid = _.uniqueId("" + prefix + "-dialog-button-");
      $("#" + prefix + "-dialog .modal-footer").append("<button id=\"" + uid + "\" class=\"btn btn-success\">\n  " + button_name + "\n</button>");
      return $("#" + uid).on("click", function() {
        if ($(this).hasClass("disabled")) {
          return false;
        } else {
          $(this).addClass("disabled");
        }
        return button_callback();
      });
    });
    dialog.$dom = $("#" + prefix + "-dialog");
    $("#" + prefix + "-dialog").on("hide", function() {
      delete $("#" + prefix + "-dialog").modal;
      $("#" + prefix + "-dialog").remove();
      return $(".modal-backdrop").remove();
    });
    return dialog;
  };
  dialog.open = function() {
    var outerHeight;

    $("#" + prefix + "-dialog .modal-body").css({
      "max-height": window.innerHeight - 141
    });
    outerHeight = $("#" + prefix + "-dialog").outerHeight();
    $("#" + prefix + "-dialog").css({
      "margin-top": -outerHeight / 2
    });
    $("#" + prefix + "-dialog").modal({
      show: true,
      backdrop: dialog.config.backdrop
    });
    return dialog;
  };
  dialog.close = function(delay) {
    if (delay) {
      setTimeout(function() {
        return $("#" + prefix + "-dialog").modal("hide");
      }, delay);
    } else {
      $("#" + prefix + "-dialog").modal("hide");
    }
    return dialog;
  };
  return module.exports = dialog;
});
